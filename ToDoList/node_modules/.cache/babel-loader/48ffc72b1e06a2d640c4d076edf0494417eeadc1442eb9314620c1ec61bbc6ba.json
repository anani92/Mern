{"ast":null,"code":"var _jsxFileName = \"/home/anani/Desktop/MERN/ToDoList/src/components/Container.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = _ref => {\n  _s();\n  let {\n    tasks,\n    setTasks\n  } = _ref;\n  const [completedTasks, setCompleted] = useState([]);\n  const [task, setTask] = useState({\n    id: '',\n    title: '',\n    completed: false\n  });\n  const [title, setTitle] = useState('');\n  const handleDelete = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const handleEdit = (id, updtedTask) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...tasks,\n          task: updtedTask\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const toggleComplete = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const clearList = () => {\n    props.setTasks([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(AddTask, {\n      tasks: tasks,\n      setTasks: setTasks,\n      title: title,\n      setTitle: setTitle,\n      setTask: setTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), tasks.map((task, i) => /*#__PURE__*/_jsxDEV(Task, {\n      isCompleted: task.isCompleted,\n      taskTitle: task.title,\n      handleDelete: () => handleDelete(task.id),\n      handleEdit: () => handleEdit(task.id),\n      toggleComplete: toggleComplete\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger btn-block text-capitalize mt-5\",\n      onClick: clearList,\n      children: \"clear list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Container, \"RQPnOlDQndDOIowL48IvJNXBwMk=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","Task","AddTask","Container","tasks","setTasks","completedTasks","setCompleted","task","setTask","id","title","completed","setTitle","handleDelete","filter","handleEdit","updtedTask","updatedTasks","map","toggleComplete","clearList","props","i","isCompleted"],"sources":["/home/anani/Desktop/MERN/ToDoList/src/components/Container.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Task from './Task'\nimport AddTask from './components/AddTask'\n\nconst Container = ({ tasks, setTasks }) => {\n  const [completedTasks, setCompleted] = useState([])\n  const [task, setTask] = useState({ id: '', title: '', completed: false })\n  const [title, setTitle] = useState('')\n  const handleDelete = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const handleEdit = (id, updtedTask) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...tasks, task: updtedTask }\n      }\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n\n  const toggleComplete = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, completed: !task.completed }\n      }\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n\n  const clearList = () => {\n    props.setTasks([])\n  }\n  return (\n    <div className=\"container\">\n      <AddTask\n        tasks={tasks}\n        setTasks={setTasks}\n        title={title}\n        setTitle={setTitle}\n        setTask={setTask}\n      />\n\n      {tasks.map((task, i) => (\n        <Task\n          key={i}\n          isCompleted={task.isCompleted}\n          taskTitle={task.title}\n          handleDelete={() => handleDelete(task.id)}\n          handleEdit={() => handleEdit(task.id)}\n          toggleComplete={toggleComplete}\n        />\n      ))}\n      <button\n        type=\"button\"\n        className=\"btn btn-danger btn-block text-capitalize mt-5\"\n        onClick={clearList}\n      >\n        clear list\n      </button>\n    </div>\n  )\n}\n\nexport default Container\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAAA;AAE1C,MAAMC,SAAS,GAAG,QAAyB;EAAA;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC;EACpC,MAAM,CAACC,cAAc,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAAEU,EAAE,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAM,CAAC,CAAC;EACzE,MAAM,CAACD,KAAK,EAAEE,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,YAAY,GAAIJ,EAAE,IAAK;IAC3BL,QAAQ,CAACD,KAAK,CAACW,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EAED,MAAMM,UAAU,GAAG,CAACN,EAAE,EAAEO,UAAU,KAAK;IACrC,MAAMC,YAAY,GAAGd,KAAK,CAACe,GAAG,CAAEX,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGN,KAAK;UAAEI,IAAI,EAAES;QAAW,CAAC;MACvC;MACA,OAAOT,IAAI;IACb,CAAC,CAAC;IACFH,QAAQ,CAACa,YAAY,CAAC;EACxB,CAAC;EAED,MAAME,cAAc,GAAIV,EAAE,IAAK;IAC7B,MAAMQ,YAAY,GAAGd,KAAK,CAACe,GAAG,CAAEX,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGF,IAAI;UAAEI,SAAS,EAAE,CAACJ,IAAI,CAACI;QAAU,CAAC;MAChD;MACA,OAAOJ,IAAI;IACb,CAAC,CAAC;IACFH,QAAQ,CAACa,YAAY,CAAC;EACxB,CAAC;EAED,MAAMG,SAAS,GAAG,MAAM;IACtBC,KAAK,CAACjB,QAAQ,CAAC,EAAE,CAAC;EACpB,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB,QAAC,OAAO;MACN,KAAK,EAAED,KAAM;MACb,QAAQ,EAAEC,QAAS;MACnB,KAAK,EAAEM,KAAM;MACb,QAAQ,EAAEE,QAAS;MACnB,OAAO,EAAEJ;IAAQ;MAAA;MAAA;MAAA;IAAA,QACjB,EAEDL,KAAK,CAACe,GAAG,CAAC,CAACX,IAAI,EAAEe,CAAC,kBACjB,QAAC,IAAI;MAEH,WAAW,EAAEf,IAAI,CAACgB,WAAY;MAC9B,SAAS,EAAEhB,IAAI,CAACG,KAAM;MACtB,YAAY,EAAE,MAAMG,YAAY,CAACN,IAAI,CAACE,EAAE,CAAE;MAC1C,UAAU,EAAE,MAAMM,UAAU,CAACR,IAAI,CAACE,EAAE,CAAE;MACtC,cAAc,EAAEU;IAAe,GAL1BG,CAAC;MAAA;MAAA;MAAA;IAAA,QAOT,CAAC,eACF;MACE,IAAI,EAAC,QAAQ;MACb,SAAS,EAAC,+CAA+C;MACzD,OAAO,EAAEF,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,GA5DKlB,SAAS;AAAA,KAATA,SAAS;AA8Df,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}