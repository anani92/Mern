{"ast":null,"code":"var _jsxFileName = \"/home/anani/Desktop/MERN/ToDoList/src/components/Container.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = _ref => {\n  _s();\n  let {\n    tasks,\n    setTasks\n  } = _ref;\n  const [completedTasks, setCompleted] = useState([]);\n  const handleDelete = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const handleEdit = (id, updtedTask) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...tasks,\n          task: updtedTask\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const toggleComplete = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(AddTask, {\n      tasks: tasks,\n      setTasks: setTasks,\n      setTask: setTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), tasks.map((task, i) => /*#__PURE__*/_jsxDEV(Task, {\n      isCompleted: task.isCompleted,\n      taskTitle: task.title,\n      handleDelete: () => handleDelete(task.id),\n      handleEdit: () => handleEdit(task.id),\n      toggleComplete: toggleComplete\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger btn-block text-capitalize mt-5\",\n      onClick: clearList,\n      children: \"clear list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Container, \"tyVbo1bYQdCAFeAxH1DBAPle6qI=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","Task","AddTask","Container","tasks","setTasks","completedTasks","setCompleted","handleDelete","id","filter","task","handleEdit","updtedTask","updatedTasks","map","toggleComplete","completed","setTask","i","isCompleted","title","clearList"],"sources":["/home/anani/Desktop/MERN/ToDoList/src/components/Container.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Task from './Task'\nimport AddTask from './components/AddTask'\n\nconst Container = ({ tasks, setTasks }) => {\n  const [completedTasks, setCompleted] = useState([])\n\n  const handleDelete = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const handleEdit = (id, updtedTask) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...tasks, task: updtedTask }\n      }\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n\n  const toggleComplete = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, completed: !task.completed }\n      }\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n  return (\n    <div className=\"container\">\n      <AddTask\n        tasks={tasks}\n        setTasks={setTasks}\n        setTask={setTask}\n      />\n\n      {tasks.map((task, i) => (\n        <Task\n          key={i}\n          isCompleted={task.isCompleted}\n          taskTitle={task.title}\n          handleDelete={() => handleDelete(task.id)}\n          handleEdit={() => handleEdit(task.id)}\n          toggleComplete={toggleComplete}\n        />\n      ))}\n      <button\n        type=\"button\"\n        className=\"btn btn-danger btn-block text-capitalize mt-5\"\n        onClick={clearList}\n      >\n        clear list\n      </button>\n    </div>\n  )\n}\n\nexport default Container\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAAA;AAE1C,MAAMC,SAAS,GAAG,QAAyB;EAAA;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC;EACpC,MAAM,CAACC,cAAc,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEnD,MAAMQ,YAAY,GAAIC,EAAE,IAAK;IAC3BJ,QAAQ,CAACD,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EAED,MAAMG,UAAU,GAAG,CAACH,EAAE,EAAEI,UAAU,KAAK;IACrC,MAAMC,YAAY,GAAGV,KAAK,CAACW,GAAG,CAAEJ,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGL,KAAK;UAAEO,IAAI,EAAEE;QAAW,CAAC;MACvC;MACA,OAAOF,IAAI;IACb,CAAC,CAAC;IACFN,QAAQ,CAACS,YAAY,CAAC;EACxB,CAAC;EAED,MAAME,cAAc,GAAIP,EAAE,IAAK;IAC7B,MAAMK,YAAY,GAAGV,KAAK,CAACW,GAAG,CAAEJ,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGE,IAAI;UAAEM,SAAS,EAAE,CAACN,IAAI,CAACM;QAAU,CAAC;MAChD;MACA,OAAON,IAAI;IACb,CAAC,CAAC;IACFN,QAAQ,CAACS,YAAY,CAAC;EACxB,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB,QAAC,OAAO;MACN,KAAK,EAAEV,KAAM;MACb,QAAQ,EAAEC,QAAS;MACnB,OAAO,EAAEa;IAAQ;MAAA;MAAA;MAAA;IAAA,QACjB,EAEDd,KAAK,CAACW,GAAG,CAAC,CAACJ,IAAI,EAAEQ,CAAC,kBACjB,QAAC,IAAI;MAEH,WAAW,EAAER,IAAI,CAACS,WAAY;MAC9B,SAAS,EAAET,IAAI,CAACU,KAAM;MACtB,YAAY,EAAE,MAAMb,YAAY,CAACG,IAAI,CAACF,EAAE,CAAE;MAC1C,UAAU,EAAE,MAAMG,UAAU,CAACD,IAAI,CAACF,EAAE,CAAE;MACtC,cAAc,EAAEO;IAAe,GAL1BG,CAAC;MAAA;MAAA;MAAA;IAAA,QAOT,CAAC,eACF;MACE,IAAI,EAAC,QAAQ;MACb,SAAS,EAAC,+CAA+C;MACzD,OAAO,EAAEG,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,GArDKnB,SAAS;AAAA,KAATA,SAAS;AAuDf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}