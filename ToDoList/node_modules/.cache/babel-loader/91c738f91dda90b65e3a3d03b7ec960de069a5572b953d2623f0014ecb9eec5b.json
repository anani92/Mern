{"ast":null,"code":"var _jsxFileName = \"/home/anani/Desktop/MERN/ToDoList/src/components/Container.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = props => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: uuid(),\n    task: '',\n    completed: false\n  }]);\n  const handleDelete = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const handleEdit = (id, updtedTask) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...tasks,\n          task: updtedTask\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const toggleComplete = id => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [tasks.map((task, i) => /*#__PURE__*/_jsxDEV(Task, {\n      isCompleted: task.isCompleted,\n      taskName: task.name,\n      handleDelete: () => handleDelete(task.id),\n      handleEdit: () => handleEdit(task.id)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger btn-block text-capitalize mt-5\",\n      onClick: clearList,\n      children: \"clear list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Container, \"KUWq57Vgk3Z04qoNPlwSBL/ityA=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","Task","Container","props","tasks","setTasks","id","uuid","task","completed","handleDelete","setTodos","todos","filter","todo","handleEdit","updtedTask","updatedTodos","map","toggleComplete","i","isCompleted","name","clearList"],"sources":["/home/anani/Desktop/MERN/ToDoList/src/components/Container.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Task from './Task'\nconst Container = (props) => {\n  const [tasks, setTasks] = useState([\n    { id: uuid(), task: '', completed: false },\n  ])\n\n  const handleDelete = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id))\n  }\n\n  const handleEdit = (id, updtedTask) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...tasks, task: updtedTask }\n      }\n      return todo\n    })\n    setTodos(updatedTodos)\n  }\n\n  const toggleComplete = (id) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed }\n      }\n      return todo\n    })\n    setTodos(updatedTodos)\n  }\n  return (\n    <div className=\"container\">\n      {tasks.map((task, i) => (\n        <Task\n          key={i}\n          isCompleted={task.isCompleted}\n          taskName={task.name}\n          handleDelete={() => handleDelete(task.id)}\n          handleEdit={() => handleEdit(task.id)}\n        />\n      ))}\n      <button\n        type=\"button\"\n        className=\"btn btn-danger btn-block text-capitalize mt-5\"\n        onClick={clearList}\n      >\n        clear list\n      </button>\n    </div>\n  )\n}\n\nexport default Container\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAA;AACzB,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CACjC;IAAEM,EAAE,EAAEC,IAAI,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAM,CAAC,CAC3C,CAAC;EAEF,MAAMC,YAAY,GAAIJ,EAAE,IAAK;IAC3BK,QAAQ,CAACC,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EAED,MAAMS,UAAU,GAAG,CAACT,EAAE,EAAEU,UAAU,KAAK;IACrC,MAAMC,YAAY,GAAGL,KAAK,CAACM,GAAG,CAAEJ,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACR,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGF,KAAK;UAAEI,IAAI,EAAEQ;QAAW,CAAC;MACvC;MACA,OAAOF,IAAI;IACb,CAAC,CAAC;IACFH,QAAQ,CAACM,YAAY,CAAC;EACxB,CAAC;EAED,MAAME,cAAc,GAAIb,EAAE,IAAK;IAC7B,MAAMW,YAAY,GAAGL,KAAK,CAACM,GAAG,CAAEJ,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACR,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGQ,IAAI;UAAEL,SAAS,EAAE,CAACK,IAAI,CAACL;QAAU,CAAC;MAChD;MACA,OAAOK,IAAI;IACb,CAAC,CAAC;IACFH,QAAQ,CAACM,YAAY,CAAC;EACxB,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,WACvBb,KAAK,CAACc,GAAG,CAAC,CAACV,IAAI,EAAEY,CAAC,kBACjB,QAAC,IAAI;MAEH,WAAW,EAAEZ,IAAI,CAACa,WAAY;MAC9B,QAAQ,EAAEb,IAAI,CAACc,IAAK;MACpB,YAAY,EAAE,MAAMZ,YAAY,CAACF,IAAI,CAACF,EAAE,CAAE;MAC1C,UAAU,EAAE,MAAMS,UAAU,CAACP,IAAI,CAACF,EAAE;IAAE,GAJjCc,CAAC;MAAA;MAAA;MAAA;IAAA,QAMT,CAAC,eACF;MACE,IAAI,EAAC,QAAQ;MACb,SAAS,EAAC,+CAA+C;MACzD,OAAO,EAAEG,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,GAhDKrB,SAAS;AAAA,KAATA,SAAS;AAkDf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}