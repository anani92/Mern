{"ast":null,"code":"var _jsxFileName = \"/home/anani/Desktop/MERN/ToDoList/src/components/Container.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = props => {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: uuid(),\n    task: \"task 1\",\n    completed: false\n  }, {\n    id: uuid(),\n    task: \"task 2\",\n    completed: true\n  }]);\n  const create = newTodo => {\n    console.log(newTodo);\n    setTodos([...todos, newTodo]);\n  };\n  const remove = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const update = (id, updtedTask) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          task: updtedTask\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const toggleComplete = id => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [tasks.map((task, i) => /*#__PURE__*/_jsxDEV(Task, {\n      isCompleted: task.isCompleted,\n      taskName: task.name,\n      handleDelete: () => handleDelete(task.id),\n      handleEdit: () => handleEdit(task.id)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger btn-block text-capitalize mt-5\",\n      onClick: clearList,\n      children: \"clear list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Container, \"1zj6S2gGFOiB+LWMYyp5ycQNGXw=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","Task","Container","props","todos","setTodos","id","uuid","task","completed","create","newTodo","console","log","remove","filter","todo","update","updtedTask","updatedTodos","map","toggleComplete","tasks","i","isCompleted","name","handleDelete","handleEdit","clearList"],"sources":["/home/anani/Desktop/MERN/ToDoList/src/components/Container.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Task from './Task'\nconst Container = (props) => {\n  const [todos, setTodos] = useState([\n    { id: uuid(), task: \"task 1\", completed: false },\n    { id: uuid(), task: \"task 2\", completed: true }\n  ]);\n\n  const create = newTodo => {\n    console.log(newTodo);\n    setTodos([...todos, newTodo]);\n  };\n\n  const remove = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const update = (id, updtedTask) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, task: updtedTask };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const toggleComplete = id => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return (\n    <div className=\"container\">\n      {tasks.map((task, i) => (\n        <Task\n          key={i}\n          isCompleted={task.isCompleted}\n          taskName={task.name}\n          handleDelete={() => handleDelete(task.id)}\n          handleEdit={() => handleEdit(task.id)}\n        />\n      ))}\n      <button\n        type=\"button\"\n        className=\"btn btn-danger btn-block text-capitalize mt-5\"\n        onClick={clearList}\n      >\n        clear list\n      </button>\n    </div>\n  )\n}\n\nexport default Container\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAA;AACzB,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CACjC;IAAEM,EAAE,EAAEC,IAAI,EAAE;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAM,CAAC,EAChD;IAAEH,EAAE,EAAEC,IAAI,EAAE;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAK,CAAC,CAChD,CAAC;EAEF,MAAMC,MAAM,GAAGC,OAAO,IAAI;IACxBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpBN,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEO,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMG,MAAM,GAAGR,EAAE,IAAI;IACnBD,QAAQ,CAACD,KAAK,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,MAAMW,MAAM,GAAG,CAACX,EAAE,EAAEY,UAAU,KAAK;IACjC,MAAMC,YAAY,GAAGf,KAAK,CAACgB,GAAG,CAACJ,IAAI,IAAI;MACrC,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGU,IAAI;UAAER,IAAI,EAAEU;QAAW,CAAC;MACtC;MACA,OAAOF,IAAI;IACb,CAAC,CAAC;IACFX,QAAQ,CAACc,YAAY,CAAC;EACxB,CAAC;EAED,MAAME,cAAc,GAAGf,EAAE,IAAI;IAC3B,MAAMa,YAAY,GAAGf,KAAK,CAACgB,GAAG,CAACJ,IAAI,IAAI;MACrC,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGU,IAAI;UAAEP,SAAS,EAAE,CAACO,IAAI,CAACP;QAAU,CAAC;MAChD;MACA,OAAOO,IAAI;IACb,CAAC,CAAC;IACFX,QAAQ,CAACc,YAAY,CAAC;EACxB,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,WACvBG,KAAK,CAACF,GAAG,CAAC,CAACZ,IAAI,EAAEe,CAAC,kBACjB,QAAC,IAAI;MAEH,WAAW,EAAEf,IAAI,CAACgB,WAAY;MAC9B,QAAQ,EAAEhB,IAAI,CAACiB,IAAK;MACpB,YAAY,EAAE,MAAMC,YAAY,CAAClB,IAAI,CAACF,EAAE,CAAE;MAC1C,UAAU,EAAE,MAAMqB,UAAU,CAACnB,IAAI,CAACF,EAAE;IAAE,GAJjCiB,CAAC;MAAA;MAAA;MAAA;IAAA,QAMT,CAAC,eACF;MACE,IAAI,EAAC,QAAQ;MACb,SAAS,EAAC,+CAA+C;MACzD,OAAO,EAAEK,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,GAtDK1B,SAAS;AAAA,KAATA,SAAS;AAwDf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}